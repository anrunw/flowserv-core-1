workflow:
    version: '0.3.0'
    inputs:
      files:
        - 'code/'
        - 'data/'
    workflow:
      type: 'serial'
      specification:
        steps:
          - environment: '$[[env_preproc]]'
            commands:
              - '$[[cmd_preproc]]'
          - environment: '$[[env_eval]]'
            commands:
              - '$[[cmd_eval]]'
          - environment: 'toptagger:1.0'
            commands:
              - 'python code/save-probabilities.py data/evaluate/ results/'
    outputs:
      files:
       - 'results/yProbBest.pkl'
       - 'results/results.json'
       - 'results/analyze.log'
       - 'results/evaluate.log'
       - 'results/preproc.log'
postproc:
    workflow:
        steps:
        - environment: 'toptagger:1.0'
          commands:
            - 'python code/plot-roc.py ${in} data/evaluate/labels.pkl ${out}'
    inputs:
        files:
            - 'results/yProbBest.pkl'
parameterGroups:
    - name: 'preproc'
      title: 'Pre-Processing Step'
      index: 0
    - name: 'eval'
      title: 'ML Evaluation Step'
      index: 1
parameters:
    - name: 'env_preproc'
      label: 'Environment (Pre-Processing)'
      dtype: 'string'
      defaultValue: 'toptagger:1.0'
      index: 0
      group: 'preproc'
    - name: 'cmd_preproc'
      label: 'Command  (Pre-Processing)'
      dtype: 'string'
      defaultValue: 'python code/preprocess-dataset.py
        data/test_jets.pkl
        data/preprocess/jet_image_trim_pt800-900_card.dat
        data/preprocess/transformer.pkl
        results/'
      index: 1
      group: 'preproc'
    - name: 'env_eval'
      label: 'Environment (ML)'
      dtype: 'string'
      defaultValue: 'toptagger:1.0'
      index: 2
      group: 'eval'
    - name: 'cmd_eval'
      label: 'Command (ML)'
      dtype: 'string'
      defaultValue: 'python code/evaluate-models.py
        results/processed_test_jets.pkl
        data/evaluate/
        results'
      index: 3
      group: 'eval'
results:
    file: 'results/results.json'
    schema:
        - name: 'mean_accuracy'
          label: 'Accuracy (mean)'
          path: 'accuracy/mean'
          dtype: 'float'
        - name: 'mean_auc'
          label: 'AUC (mean)'
          path: 'auc/mean'
          dtype: 'float'
        - name: 'mean_loss'
          label: 'Loss (mean)'
          path: 'loss/mean'
          dtype: 'float'
    orderBy:
        - name: 'mean_accuracy'
          sortDesc: true
        - name: 'mean_auc'
          sortDesc: true
